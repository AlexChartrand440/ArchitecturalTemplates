import org.scaledl.architecturaltemplates.repositories.cloudscale.black.ProfilesLibrary;

modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.1';

/**
 * Transforms a resource environment where resource containers are annotated with the
 * "Virtualized Resource Container" AT roles to a PCM instance where each such container
 * can be dynamically vertically scaled. By default, processing rates of all present
 * active resources are equally scaled up if needed (e.g., triggerd by an automated
 * scaling listener).
 *
 * Replication is based on upper and lower thresholds for scaling out and in, respectively.
 * Such thresholds related to average active resource utilization taken at the container
 * in intervals. Intervals and thresholds can externally be set via properties.
 *
 * TODO Quite simplistic direct mapping to Virtualized stereortypes, without further
 *      features. Should there be more?
 *
 * @see http://cloudscale.xlab.si/wiki/index.php/Dynamic_Vertical_Scaling_CAT
 * @see http://cloudpatterns.org/mechanisms/automated_scaling_listener
 *
 * @author Sebastian Lehrig
 **/
transformation DynamicVerticalScalingResourceContainer(
                           inout pcmSystem : PCM_SYS);

main() {	
	log ('Architectural Template Transformation "Dynamic Vertical Scaling Resource Container" started');

	var system : System := pcmSystem.rootObjects()![System];
	assert fatal(hasAppliedStereotype(system, "DynamicVerticalScalingResourceContainerSystem"))
		with log ("The system is not a dynamic vertical scaling resource container system!");
	
	log ('Architectural Template Transformation "Dynamic Vertical Scaling Resource Container" finished');
}

